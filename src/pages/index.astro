---
import "../base.css";
import json from "data/rules.json";
import Header from "src/components/Header.astro";
import ServiceCard from "src/components/service/ServiceCard.astro";
import { PiMagnifyingGlass } from "react-icons/pi";
// Types inferred from JSON
export type RuleSet = typeof json;
export type Group = RuleSet["groups"][number];
export type Service = Group["services"][number];
export type Exporter = Service["exporters"][number];
export type Rule = NonNullable<Exporter["rules"]>[number];
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/logo.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<!-- Inter -->
		<link rel="preconnect" href="https://rsms.me/" />
		<link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
		<!-- Jetbrains Mono? -->
		<!-- Use BunnyCDN instead? -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link
			href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@100..800&display=swap"
			rel="stylesheet"
		/>

		<title>Awesome Prometheus Toolkit</title>
	</head>
	<body>
		<Header />
		<main class="mx-auto max-w-6xl px-4 my-8">
			<h1>Browse Library</h1>
			<div class="input mb-8 flex flex-row items-center gap-2">
				<PiMagnifyingGlass />
				<input
					id="component-search"
					name="component-search"
					type="search"
					placeholder="Search for a component"
					class="flex-grow" />
			</div>

			<!-- Groups -->
			{
				json.groups.map((group) => {
					return (
						<section data-group-name={group.name} class="mb-16">
							<h2>{group.name}</h2>
							{/* Card grid */}
							<div class="grid grid-dynamic-base gap-6">
								{group.services.map((service) => {
									return <ServiceCard service={service} />;
								})}
							</div>
						</section>
					);
				})
			}
		</main>
		<!-- Footer -->
		<footer class="p-8 border-t">
			<section class="max-w-6xl mx-auto">
				<p>
					Built with Astro. <a
						href="https://samber.github.io/awesome-prometheus-alerts/"
						>Original by samber.</a
					>.
				</p>
			</section>
		</footer>
	</body>
</html>

<script>
	const HIDDEN_CLASS = "hidden";
	const SERVICE_CARD_SELECTOR = "[data-service-name]";

	function filterServices(searchTerm: string) {
		const sections = document.querySelectorAll("[data-group-name]"); // Select all group sections

		sections.forEach((section) => {
			const services = section.querySelectorAll(SERVICE_CARD_SELECTOR); // Select all service cards in this section
			let hasVisibleService = false;

			services.forEach((serviceCard) => {
				const serviceName = serviceCard
					.getAttribute("data-service-name")
					?.toLowerCase(); // Get the service name from the data attribute
				if (serviceName) {
					if (serviceName.includes(searchTerm)) {
						serviceCard.classList.remove(HIDDEN_CLASS); // Show service card if it matches
						hasVisibleService = true;
					} else {
						serviceCard.classList.add(HIDDEN_CLASS); // Hide service card if it doesn't match
					}
				}
			});

			// Hide the entire section if no services are visible
			if (hasVisibleService) {
				section.classList.remove(HIDDEN_CLASS);
			} else {
				section.classList.add(HIDDEN_CLASS);
			}
		});
	}

	const input = document.getElementById("component-search");
	if (input instanceof HTMLInputElement) {
		input.addEventListener("keyup", (ev) => {
			if (ev.target instanceof HTMLInputElement) {
				filterServices(ev.target.value);
			}
		});
	}
</script>
