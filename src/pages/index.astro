---
import yaml from "js-yaml";
const response = await fetch(
	"https://raw.githubusercontent.com/samber/awesome-prometheus-alerts/refs/heads/master/_data/rules.yml",
	{},
);

if (!response.ok) {
	throw Error("All is not daijobu.");
}

const rawYml = await (await response.blob()).text();

const json = yaml.load(rawYml) as JsonExpected;
if (!json) {
	throw Error("JSON generated by js-yaml was null.");
}

type Rule = {
	name: string;
	description: string;
	query: string;
	severity: string;
	for: string;
	comments: string;
	summary: string;
};
type Exporter = {
	slug: string;
	rules?: Rule[];
	name: string;
	doc_url: string;
};
type Service = {
	name: string;
	exporters: Exporter[];
};
type Group = {
	name: string;
	services: Service[];
};
type JsonExpected = {
	groups: Group[];
};
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Awesome Astro Prometheus</title>
	</head>
	<body>
		{
			json.groups.map((group) => {
				// const exportes = group.exporters.map((exporter) => )
				return (
					<>
						<h1 class="font-bold">{group.name}</h1>
						{group.services.map((service) => {
							return (
								<div class="border grid grid-cols-4">
									<div>
										<h2>{service.name}</h2>
										<p>
											<span class="uppercase">
												{service.exporters
													.map((exporter) => {
														return exporter.rules
															?.length;
													})
													.reduce((prev, cur) => {
														return (
															(prev ?? 0) +
															(cur ?? 0)
														);
													}, 0)}{" "}
												rules
											</span>{" "}
											<span>
												{service.exporters.map(
													(exp) => {
														return exp.rules
															?.map(
																(rule) =>
																	rule.name,
															)
															.join(", ");
													},
												)}
											</span>
											{/* {service.exporters.map((ex) => {})} */}
										</p>
									</div>
								</div>
							);
						})}
					</>
				);
			})
		}
	</body>
</html>
